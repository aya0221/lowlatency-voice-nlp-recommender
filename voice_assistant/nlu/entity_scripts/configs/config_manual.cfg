[paths]
train = "voice_assistant/data/entity_data/train.spacy"
dev = "voice_assistant/data/entity_data/dev.spacy"
vectors = null
init_tok2vec = null

[nlp]
lang = "en"
pipeline = ["transformer","ner"]
batch_size = 128

[components]

[components.transformer]
factory = "transformer"
max_batch_items = 4096
set_extra_annotations = {"@annotation_setters":"spacy-transformers.null_annotation_setter.v1"}

[components.transformer.model]
@architectures = "spacy-transformers.TransformerModel.v3"
name = "roberta-base"
get_spans = {"@span_getters":"spacy-transformers.doc_spans.v1"}
mixed_precision = false

[components.transformer.model.tokenizer_config]
use_fast = true

[components.transformer.model.grad_scaler_config]

[components.transformer.model.transformer_config]

[components.ner]
factory = "ner"
scorer = {"@scorers":"spacy.ner_scorer.v1"}

[components.ner.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "ner"
extra_state_tokens = false
hidden_width = 64
maxout_pieces = 2
use_upper = false
nO = null

[components.ner.model.tok2vec]
@architectures = "spacy-transformers.TransformerListener.v1"
upstream = "transformer"
pooling = {"@layers": "reduce_mean.v1"}
grad_factor = 1.0

[corpora]

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
gold_preproc = false

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
gold_preproc = false

[training]
train_corpus = "corpora.train"
dev_corpus = "corpora.dev"
seed = 42
gpu_allocator = "pytorch"
dropout = 0.1
max_epochs = 15
patience = 1600
eval_frequency = 200

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = true
tolerance = 0.2
size = 2000

[training.optimizer]
@optimizers = "Adam.v1"
learn_rate = 0.001
L2_is_weight_decay = true
L2 = 0.01
grad_clip = 1.0
beta1 = 0.9
beta2 = 0.999
eps = 1e-8
use_averages = false

[training.score_weights]
ents_f = 1.0 
ents_p = 0.0
ents_r = 0.0

[initialize]
[initialize.components]
[initialize.components.ner]
labels = ["WORKOUT_TYPE","DURATION","INTENSITY","GOAL","MOOD","INSTRUCTOR"]
